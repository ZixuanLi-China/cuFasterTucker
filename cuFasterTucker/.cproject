<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.toolchain.linux.configuration.debug.1464965616">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.toolchain.linux.configuration.debug.1464965616" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.toolchain.nvccErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" description="" id="com.nvidia.cuda.toolchain.linux.configuration.debug.1464965616" name="Debug" optionalBuildProperties="org.eclipse.cdt.docker.launcher.containerbuild.property.enablement=null,org.eclipse.cdt.docker.launcher.containerbuild.property.selectedvolumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.image=null,org.eclipse.cdt.docker.launcher.containerbuild.property.volumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.connection=null" parent="com.nvidia.cuda.toolchain.linux.configuration.debug">
					<folderInfo id="com.nvidia.cuda.toolchain.linux.configuration.debug.1464965616." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.toolchain.linux.debugToolchain.1099955844" name="CUDA Linux toolchain" superClass="com.nvidia.cuda.toolchain.linux.debugToolchain">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="com.nvidia.cuda.toolchain.targetLinuxPlatform.790262088" isAbstract="false" osList="linux" superClass="com.nvidia.cuda.toolchain.targetLinuxPlatform"/>
							<builder buildPath="${workspace_loc:/cuFasterNTucker}/Debug" id="com.nvidia.cuda.toolchain.builder.1152980047" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit Builder" superClass="com.nvidia.cuda.toolchain.builder"/>
							<tool id="nvcc.linker.1851188943" name="NVCC linker" superClass="nvcc.linker">
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="nvcc.linker.paths.375023253" superClass="nvcc.linker.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/local/cuda/lib64/"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="nvcc.linker.libs.1234854044" superClass="nvcc.linker.libs" valueType="libs">
									<listOptionValue builtIn="false" value="cublas"/>
								</option>
								<inputType id="com.nvidia.cuda.toolchain.nvcc.linker.input.177647251" superClass="com.nvidia.cuda.toolchain.nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.1945801529" name="NVCC archiver" superClass="nvcc.archiver"/>
							<tool id="nvcc.compiler.2027307071" name="NVCC Compiler" superClass="nvcc.compiler">
								<option defaultValue="true" id="com.nvidia.cuda.toolchain.compiler.device-debug.670151638" name="Generate debug information for device code (-G)" superClass="com.nvidia.cuda.toolchain.compiler.device-debug" useByScannerDiscovery="false" valueType="boolean"/>
								<option defaultValue="true" id="com.nvidia.cuda.toolchain.compiler.debug.444242945" name="Generate debug information for host code (-g)" superClass="com.nvidia.cuda.toolchain.compiler.debug" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="nvcc.compiler.pic.1197641881" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" useByScannerDiscovery="false"/>
								<option id="com.nvidia.cuda.toolchain.compiler.cuda.sm_86_ptx.1718663422" name="Generate SM 8.6 PTX" superClass="com.nvidia.cuda.toolchain.compiler.cuda.sm_86_ptx" useByScannerDiscovery="false" value="true" valueType="boolean"/>
								<option id="com.nvidia.cuda.toolchain.compiler.cuda.sm_52_ptx.704127884" name="Generate SM 5.2 PTX" superClass="com.nvidia.cuda.toolchain.compiler.cuda.sm_52_ptx" useByScannerDiscovery="false" value="false" valueType="boolean"/>
								<option id="com.nvidia.cuda.toolchain.compiler.cuda.sm_86_sass.1236722887" name="Generate SM 8.6 SASS" superClass="com.nvidia.cuda.toolchain.compiler.cuda.sm_86_sass" useByScannerDiscovery="false" value="true" valueType="boolean"/>
								<option id="com.nvidia.cuda.toolchain.compiler.cuda.sm_52_sass.1360894582" name="Generate SM 5.2 SASS" superClass="com.nvidia.cuda.toolchain.compiler.cuda.sm_52_sass" useByScannerDiscovery="false" value="false" valueType="boolean"/>
								<inputType id="com.nvidia.cuda.toolchain.input.c.1350245539" name="C" superClass="com.nvidia.cuda.toolchain.input.c"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cu.655940665" name="CUDA" superClass="com.nvidia.cuda.toolchain.input.cu"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cpp.608682071" name="C++" superClass="com.nvidia.cuda.toolchain.input.cpp"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.toolchain.linux.configuration.release.777773952">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.toolchain.linux.configuration.release.777773952" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.toolchain.nvccErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" description="" id="com.nvidia.cuda.toolchain.linux.configuration.release.777773952" name="Release" optionalBuildProperties="org.eclipse.cdt.docker.launcher.containerbuild.property.enablement=null,org.eclipse.cdt.docker.launcher.containerbuild.property.image=null,org.eclipse.cdt.docker.launcher.containerbuild.property.connection=null" parent="com.nvidia.cuda.toolchain.linux.configuration.release">
					<folderInfo id="com.nvidia.cuda.toolchain.linux.configuration.release.777773952." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.toolchain.linux.releaseToolchain.1547160303" name="CUDA Linux toolchain" superClass="com.nvidia.cuda.toolchain.linux.releaseToolchain">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="com.nvidia.cuda.toolchain.targetLinuxPlatform.754295128" isAbstract="false" osList="linux" superClass="com.nvidia.cuda.toolchain.targetLinuxPlatform"/>
							<builder buildPath="${workspace_loc:/cuFasterNTucker}/Release" id="com.nvidia.cuda.toolchain.builder.1194984951" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit Builder" superClass="com.nvidia.cuda.toolchain.builder"/>
							<tool id="nvcc.linker.646692019" name="NVCC linker" superClass="nvcc.linker">
								<inputType id="com.nvidia.cuda.toolchain.nvcc.linker.input.318291048" superClass="com.nvidia.cuda.toolchain.nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.235899331" name="NVCC archiver" superClass="nvcc.archiver"/>
							<tool id="nvcc.compiler.1184151675" name="NVCC Compiler" superClass="nvcc.compiler">
								<option defaultValue="com.nvidia.cuda.toolchain.compiler.optimization.level3" id="com.nvidia.cuda.toolchain.compiler.optimization.1159550823" name="Optimization level" superClass="com.nvidia.cuda.toolchain.compiler.optimization" useByScannerDiscovery="false" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.1999074385" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" useByScannerDiscovery="false"/>
								<inputType id="com.nvidia.cuda.toolchain.input.c.301127816" name="C" superClass="com.nvidia.cuda.toolchain.input.c"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cu.748862681" name="CUDA" superClass="com.nvidia.cuda.toolchain.input.cu"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cpp.480575929" name="C++" superClass="com.nvidia.cuda.toolchain.input.cpp"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="cuFasterNTucker.com.nvidia.cuda.toolchain.linux.build.exe.677729598" name="Executable" projectType="com.nvidia.cuda.toolchain.linux.build.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope"/>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
</cproject>